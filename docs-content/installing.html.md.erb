---
title: Installing and Configuring VMware Tanzu Observability by Wavefront Nozzle
owner: Partners
---

This topic describes how to install and configure VMware Tanzu Observability by Wavefront Nozzle.

##<a id='wf-account'></a> Create a Wavefront Account
The VMware Tanzu Observability by Wavefront Nozzle requires that you have a Wavefront account with
an API access token. If you need an account, contact <a href="mailto:sales@wavefront.com">Wavefront Sales</a>.

##<a id='uaa-account'></a> Create a UAA User Account

Create a UAA user with access to the Firehose and Cloud Controller:

1. Target your system with the UAA CLI (UAAC):
   ```
   $ uaac target https://uaa.YOUR-SYSTEM-DOMAIN
   ```
   YOUR-SYSTEM-DOMAIN can be found in the Opsman TAS tile on 'Domains' page.
1. Run the following command to authenticate and obtain an access token for the admin client from the UAA server.
   ```
   $ uaac token client get admin -s ADMIN-CLIENT-CREDENTIALS-SECRET
   ```
   ADMIN-CLIENT-CREDENTIALS-SECRET can be found in the Opsman TAS tile, on the Credentials tab under 'UAA', in "Admin Client Credentials"
1. Create a Wavefront Nozzle user with the password of your choosing.
   ```
   $ uaac -t user add wavefront-nozzle --password PASSWORD --emails na
   ```
1. Add the user to the Cloud Controller Admin Read-Only group.
   ```
   uaac -t member add cloud_controller.admin_read_only wavefront-nozzle
   ```
1. Add the user to the Doppler Firehose group.
   ```
   $ uaac -t member add doppler.firehose wavefront-nozzle
   ```

For information about creating a UAA user, see
[Creating and Managing Users with the UAA CLI](http://docs.pivotal.io/pivotalcf/adminguide/uaa-user-management.html).

##<a id='install'></a> Install and Configure VMware Tanzu Observability by Wavefront Nozzle in Ops Manager

1. Download the product file from [Pivotal Network](https://network.pivotal.io/).

1. Navigate to the Ops Manager Installation Dashboard and click **Import a Product** to upload the product file.

1. Under the **Import a Product** button, click **+** next to the version number of VMware Tanzu Observability by Wavefront Nozzle.
This adds the tile to your staging area.

1. Click the newly added **VMware Tanzu Observability by Wavefront Nozzle** tile.

1. Click **Wavefront Proxy Config**.
   ![Configure Proxy](images/config_proxy.png)

1. Enter the following in the **Wavefront Proxy Config** pane:
  1. **Wavefront Instance URL**: A URL such as <code>https<span>:</span>//YOUR_INSTANCE.wavefront.com/api</code>
  1. **Wavefront API Token**: API access token from the profile page on your Wavefront instance.
      1. Click the gear icon on the top right in Wavefront
      1. Click your username
      1. Click on the **API Access** tab for the API Token:
      ![API Access Token](images/wf_api_key.png)
  1. **User friendly hostname**: A unique hostname for the proxy such as <code>DOMAIN-pcf-proxy</code>
  1. **CF Quota Name**: A CF org quota with at least 20&nbsp;GB memory and a route and port available.
  1. **Custom Proxy Configuration**: Choose <code>Default</code> for the default proxy settings.
     Optionally, you can override the proxy configuration and preprocessor rules under <code>Custom</code> settings.
     ![custom proxy configuration](images/custom proxy configuration.png)
      1. **Config**: Set custom proxy configuration  
      1. **Pre-processor Rules**: Define pre-processor rules in proxy for data filtering and altering
      1. **Logs Ingestion Config**: Set custom log ingestion configuration in proxy
1. Click **Save**.

1. Click **Wavefront Firehose Nozzle Config**.
   ![Configure Nozzle](images/config_nozzle.png)

1. Enter the following in the **Wavefront Firehose Nozzle Config** section:
  1. **CF API Hostname**: The VMware Tanzu API Hostname such as `api.YOUR-SYSTEM-DOMAIN`
  1. **CF UAA Username/CF UAA Password**: Enter the username and password you created
  in the <a href="#uaa-account">Create a UAA Admin User</a> step, above.
  1. **CF API log stream URL**: The CF API log stream URL such as `https://log-stream.YOUR-SYSTEM-DOMAIN`. Required for the v2 Nozzle API.
  1. **VMware Tanzu foundation name**: A user friendly VMware Tanzu foundation name. This is included as a point tag on the metrics sent to Wavefront.
  1. **Skip SSL Verification**: Check to skip SSL validation. This is useful in non-production environments.
  1. **Advanced Nozzle Options**: Choose <code>No</code> for the default nozzle settings.
     Optionally, choose <code>Yes</code> to configure advanced nozzle options such as filters, v1 API mode, number of nozzle instances etc.
     ![advanced nozzle options](images/advanced nozzle options.png)
      1. **Metrics White List**: Comma separated list of glob patterns. Only metrics with names matching the whitelist are reported.
      1. **Metrics Black List**: Comma separated list of glob patterns. Metrics with names matching the blacklist are dropped.
      1. **Number of Nozzle App Instances **: Number of nozzle app instances (Default: 1) 
      1. **Number of Nozzle Workers **: Number of nozzle workers (Default: 2)
      1. **Size of Nozzle ingress Queue**: Size of Nozzle ingress Queue (Default: 100000
      1. **Number of Nozzle App Instances**: Customize number of nozzle app instances (Default: 1) 
      1. **Prefix of all metrics**: All platform metrics are prefixed with pcf by default. Out-of-the-box integration dashboards and integrations metrics tracking are dependent on the default prefix.
      1. **Custom Proxy Address**: 
      1. **Custom Proxy Port**: 
      1. **Use Legacy Mode**: Flag to use a deprecated PCF API to gather metrics (will ignore 'CF API log stream url' option)
      1. **Events/Metrics to Subscribe (Only Legacy Mode)**: If legacy mode is selected then user have option to subscribe to a particular metrics/events type i.e. (Value Metrics, Counter Events, Container Metrics)
1. Click **Save**.

1. Return to the Ops Manager Installation Dashboard and click **Apply changes** to install VMware Tanzu Observability by Wavefront Nozzle tile.

##<a id='marketplace'></a> Configure Service Instance for Wavefront Service Broker for VMware Tanzu
Follow the steps below to enable developers to send app metrics to the Wavefront Proxy:

1. To provision a **wavefront-proxy** service instance: `cf create-service wavefront-proxy standard SERVICE_INSTANCE_NAME`
1. To bind apps to the service instance: `cf bind-service APP_NAME SERVICE_INSTANCE_NAME`
1. For information about how apps can send metrics to the Wavefront Proxy,
   see the [cloud-foundry-sampleapp](https://github.com/wavefrontHQ/cloud-foundry-sampleapp).
